openapi: 3.0.0
info:
  title: Wallet API
  version: '1.0'
servers:
  - url: 'http://localhost:8000'
paths:
  /account:
    parameters: []
    get:
      summary: Get account info for the authenticated account
      tags:
        - account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      operationId: get-account
      description: Retrieve the information of the user with the matching user ID.
      security:
        - Basic HTTP Auth: []
    post:
      summary: Create a new account
      tags:
        - account
      operationId: create-account
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
      description: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      security: []
  /transactions:
    get:
      summary: Get transaction history of the authenticated account
      tags:
        - transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad Request
      operationId: get-transactions
      parameters:
        - schema:
            type: string
            format: date-time
            default: '00:00:00 today'
          in: query
          name: dt_from
          description: Starting datetime for query
        - schema:
            type: string
            pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
            format: date-time
            default: now
          in: query
          name: dt_to
          description: Ending datetime for query
        - schema:
            type: integer
            maximum: 1000
            default: 100
          in: query
          name: limit
          description: Number of transactions to return
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order
          description: Ascending or descending order
      security:
        - Basic HTTP Auth: []
    parameters: []
  '/transactions/{transactionId}':
    parameters:
      - schema:
          type: string
        name: transactionId
        in: path
        required: true
    get:
      summary: Get transaction by ID
      tags:
        - transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
      operationId: get-transaction
    put:
      summary: "Create a transaction.

Clients should generate a random transactionId and pass it again if they have to retry the transaction."
      tags:
        - transaction
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
      operationId: create-transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreate'
components:
  schemas:
    AccountSelect:
      title: AccountSelect
      x-tags:
        - account
      oneOf:
        - properties:
            id:
              type: integer
              exclusiveMinimum: true
              minimum: 0
        - properties:
            username:
              type: string
              minLength: 1
      type: object
    AccountCreate:
      title: AccountCreate
      type: object
      x-tags:
        - account
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          format: password
          minLength: 6
      required:
        - username
        - password
    Account:
      title: Account
      type: object
      x-tags:
        - account
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        balance:
          type: integer
          readOnly: true
    Transaction:
      allOf:
        - $ref: '#/components/schemas/TransactionCreate'
        - type: object
          properties:
            id:
              type: string
              minLength: 1
              readOnly: true
            datetime:
              type: string
              format: date-time
              readOnly: true
    TransactionCreate:
      title: Transaction
      type: object
      x-tags:
        - transaction
      x-examples:
        example-1:
          to:
            id: string
          amount: 0
      properties:
        account_to:
          $ref: '#/components/schemas/AccountSelect'
        amount:
          type: integer
        type:
          type: string
          enum:
            - topup
            - transfer
      required:
        - amount
        - type
  securitySchemes:
    Basic HTTP Auth:
      type: http
      scheme: basic
security:
  - Basic HTTP Auth: []
